"""
Django settings for Noticiero project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
import os
import cloudinary
import cloudinary.uploader
import cloudinary.api


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-gxe77=p=6c&pe-3zve27c+ianavfi@yspso1ioq%&8e==^coth'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['.vercel.app','127.0.0.1']


# Application definition

INSTALLED_APPS = [
    "admin_interface",
    "colorfield",
    'admin_confirm',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core', 
    'crispy_forms',
    'crispy_bootstrap4',
    'rest_framework',
    'cloudinary',
    'axes',
    'Noticiero',

    
]

#CONFIGURACION DE RECAPTCHA

#CONFIG AXES
AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesStandaloneBackend',

    'django.contrib.auth.backends.ModelBackend',
]

AXES_FAILURE_LIMIT = 3 #limite de intentos
AXES_COOLOFF_TIME = timedelta(minutes=1) #tiempo de espera
AXES_LOCKOUT_URL = '/lockout/' #ruta de bloqueo (pagina en blanco)
AXES_RESET_ON_SUCCESS = True #resetea contador

CRISPY_TEMPLATE_PACK = 'bootstrap4'
X_FRAME_OPTIONS = "SAMEORIGIN" 


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'axes.middleware.AxesMiddleware',
]

ROOT_URLCONF = 'Noticiero.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'core', 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'Noticiero.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

"""DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}"""

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'postgres',    
        'USER': 'postgres.ibvzmoujpgitbqafxhdz',  
        'PASSWORD': 'jqCVfyaMXf5bDYb2',   
        'HOST': 'aws-0-sa-east-1.pooler.supabase.com',  
        'PORT': '6543',   
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'es-cl'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

#python manage.py collectstatic --upload-unhashed-files

#CONFIG DE CLOUDINARY
cloudinary.config(
    cloud_name = 'dfugzmks0',
    api_key = '391355739132718',
    api_secret = 'D3wAySj86Tu26uOzQeeMO79bPA8'
)


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

#CONFIGURACIONES PARA LOS MENSAJES
MESSAGE_STORAGE = "django.contrib.messages.storage.cookie.CookieStorage"

#CONFIGURACION RUTA LOGIN#configurando la ruta del login
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

#CONFIGURACION PARA GUARDAR LAS IMAGENES
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  
